import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.URL;
import java.util.logging.Logger;

import static java.util.logging.Level.INFO;

/**
 * Will start an instance of {@link ExploitServer} running on either provided parameters, or defaults.
 */
public class ExploitServerApp {

    private static final Logger LOGGER = Logger.getLogger("ExploitServerApp");

    private static final String DEFAULT_HOSTNAME = "127.0.0.1";
    private static final int DEFAULT_PORT = 8000;

    public static void main(String[] args) throws IOException {
        System.setProperty("java.util.logging.SimpleFormatter.format", "[%1$tF %1$tT] [%4$-7s] %5$s %n");
        final InetSocketAddress listeningAddress = getListeningAddress(args);
        ExploitServer server = new ExploitServer(listeningAddress);
        server.start();

        Runtime.getRuntime().addShutdownHook(new Thread(() -> server.stop()));
    }

    /**
     * If host and port are available on command line, use that, else apply defaults,
     * #DEFAULT_HOSTNAME and #DEFAULT_PORT.
     *
     * @param args command line args
     * @return Listening address.
     */
    private static InetSocketAddress getListeningAddress(String[] args) {
        try {
            // just some basic input sanitizing
            final URL asURL = new URL(String.format("http://%s:%d", args[0], Integer.parseInt(args[1])));
            return new InetSocketAddress(asURL.getHost(), asURL.getPort());
        } catch (Exception e) {
            LOGGER.log(INFO, "Missing or invalid arguments, using parameters {0}:{1,number,#####}", new Object[]{DEFAULT_HOSTNAME, DEFAULT_PORT});
            return new InetSocketAddress(DEFAULT_HOSTNAME, DEFAULT_PORT);
        }
    }

}
